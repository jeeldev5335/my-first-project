{"ast":null,"code":"var _jsxFileName = \"/home/jeel/Documents/reactjs/my-first-project/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst calculate = (a, b) => {\n  const add = a + b;\n  const subtract = a - b;\n  const multiply = a * b;\n  const divide = a / b;\n  return [add, subtract, multiply, divide];\n};\n\nconst App = () => {\n  const myArr = ['Mango', 'Apple', 'Orange', 'Banana'];\n  const [add, subtract, multiply, divide] = calculate(4, 7);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: myArr.map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: element\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sum: \", add, \"multi\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sub: \", subtract]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","calculate","a","b","add","subtract","multiply","divide","App","myArr","map","element"],"sources":["/home/jeel/Documents/reactjs/my-first-project/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst calculate = (a, b) => {\n  const add = a + b;\n  const subtract = a - b;\n  const multiply = a * b;\n  const divide = a / b;\n\n  return [add, subtract, multiply, divide];\n}\n\nconst App = () => {\n  const myArr = ['Mango', 'Apple', 'Orange', 'Banana'];\n  const [add, subtract, multiply, divide] = calculate(4, 7);\n\n  return (\n    <React.Fragment>\n      <ul>\n        {myArr.map((element) => <li>{element}</li>)}\n      </ul>\n      <p>\n        Sum: {add}\n        multi\n      </p>\n      <p>\n        Sub: {subtract}\n      </p>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,SAAS,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;EAC1B,MAAMC,GAAG,GAAGF,CAAC,GAAGC,CAAhB;EACA,MAAME,QAAQ,GAAGH,CAAC,GAAGC,CAArB;EACA,MAAMG,QAAQ,GAAGJ,CAAC,GAAGC,CAArB;EACA,MAAMI,MAAM,GAAGL,CAAC,GAAGC,CAAnB;EAEA,OAAO,CAACC,GAAD,EAAMC,QAAN,EAAgBC,QAAhB,EAA0BC,MAA1B,CAAP;AACD,CAPD;;AASA,MAAMC,GAAG,GAAG,MAAM;EAChB,MAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,EAA6B,QAA7B,CAAd;EACA,MAAM,CAACL,GAAD,EAAMC,QAAN,EAAgBC,QAAhB,EAA0BC,MAA1B,IAAoCN,SAAS,CAAC,CAAD,EAAI,CAAJ,CAAnD;EAEA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE;MAAA,UACGQ,KAAK,CAACC,GAAN,CAAWC,OAAD,iBAAa;QAAA,UAAKA;MAAL;QAAA;QAAA;QAAA;MAAA,QAAvB;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,oBACQP,GADR;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAQE;MAAA,oBACQC,QADR;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAlBD;;KAAMG,G;AAoBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}